//////////////////////////////////////////////////////////////////////////////
// Generated by TKLGEN - Version Mar  8 2013
// Copyright (C) 2013, Thiago Adams (thiago.adams@gmail.com)
// www.thradams.com
//
// Permission to copy, use, modify, sell and distribute this software
// is granted provided this copyright notice appears in all copies.
// This software is provided "as is" without express or implied
// warranty, and with no claim as to its suitability for any purpose.
//
//////////////////////////////////////////////////////////////////////////////
#ifndef __SAMPLE1DFA_H__
#define __SAMPLE1DFA_H__

namespace Sample1
{

enum Tokens
{
    TKKeywordEmpty,
    TKKeywordAny,
    TKKeywordModule,
    TKKeywordLanguage,
    TKKeywordInterleave,
    TKKeywordSyntax,
    TKKeywordToken,
    TKPlusCharacter,
    TKLiteralChar,
    TKRangeSeparator,
    TKEqualsCharacter,
    TKSemicolonCharacter,
    TKCommaCharacter,
    TKIdentifier,
    TKQuestionMarkCharacter,
    TKAsteriskCharacter,
    TKLeftCurlyBracketCharacter,
    TKRightCurlyBracketCharacter,
    TKVerticalLineCharacter,
    TKAmpersandCharacter,
    TKLeftParenthesisCharacter,
    TKRightParenthesisCharacter,
    TKStringLiteral,
    TKBlanks,
};

inline const wchar_t* TokensToString(Tokens e)
{
    switch(e)
    {
    case TKKeywordEmpty: return L"KeywordEmpty";
    case TKKeywordAny: return L"KeywordAny";
    case TKKeywordModule: return L"KeywordModule";
    case TKKeywordLanguage: return L"KeywordLanguage";
    case TKKeywordInterleave: return L"KeywordInterleave";
    case TKKeywordSyntax: return L"KeywordSyntax";
    case TKKeywordToken: return L"KeywordToken";
    case TKPlusCharacter: return L"PlusCharacter";
    case TKLiteralChar: return L"LiteralChar";
    case TKRangeSeparator: return L"RangeSeparator";
    case TKEqualsCharacter: return L"EqualsCharacter";
    case TKSemicolonCharacter: return L"SemicolonCharacter";
    case TKCommaCharacter: return L"CommaCharacter";
    case TKIdentifier: return L"Identifier";
    case TKQuestionMarkCharacter: return L"QuestionMarkCharacter";
    case TKAsteriskCharacter: return L"AsteriskCharacter";
    case TKLeftCurlyBracketCharacter: return L"LeftCurlyBracketCharacter";
    case TKRightCurlyBracketCharacter: return L"RightCurlyBracketCharacter";
    case TKVerticalLineCharacter: return L"VerticalLineCharacter";
    case TKAmpersandCharacter: return L"AmpersandCharacter";
    case TKLeftParenthesisCharacter: return L"LeftParenthesisCharacter";
    case TKRightParenthesisCharacter: return L"RightParenthesisCharacter";
    case TKStringLiteral: return L"StringLiteral";
    case TKBlanks: return L"Blanks";
    default:break;
    }
    return L"";
}

struct DFA
{
    typedef Tokens TokenType;

    static int GetNext(int state, wchar_t ch)
    {
        switch (state)
        {
            case 0:
        if (ch >= L'\t' && ch <= L'\n')
          return 1;
            else if (ch == L'\r')
                return 1;
            else if (ch == L' ')
                return 1;
            else if (ch == L'"')
                return 2;
            else if (ch == L'$')
                return 3;
            else if (ch == L'&')
                return 4;
            else if (ch == L'\'')
                return 5;
            else if (ch == L'(')
                return 6;
            else if (ch == L')')
                return 7;
            else if (ch == L'*')
                return 8;
            else if (ch == L'+')
                return 9;
            else if (ch == L',')
                return 10;
            else if (ch == L'.')
                return 11;
            else if (ch == L'/')
                return 12;
            else if (ch == L';')
                return 13;
            else if (ch == L'=')
                return 14;
            else if (ch == L'?')
                return 15;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
            else if (ch == L'a')
                return 16;
        else if (ch >= L'b' && ch <= L'd')
          return 3;
            else if (ch == L'e')
                return 17;
        else if (ch >= L'f' && ch <= L'h')
          return 3;
            else if (ch == L'i')
                return 18;
        else if (ch >= L'j' && ch <= L'k')
          return 3;
            else if (ch == L'l')
                return 19;
            else if (ch == L'm')
                return 20;
        else if (ch >= L'n' && ch <= L'r')
          return 3;
            else if (ch == L's')
                return 21;
            else if (ch == L't')
                return 22;
        else if (ch >= L'u' && ch <= L'z')
          return 3;
            else if (ch == L'{')
                return 23;
            else if (ch == L'|')
                return 24;
        else if (ch == L'}')
          return 25;
    break; // 
            case 1:
        if (ch >= L'\t' && ch <= L'\n')
          return 1;
            else if (ch == L'\r')
                return 1;
            else if (ch == L' ')
                return 1;
        //TKBlanks
    break; // 
            case 2:
        if (ch >= L' ' && ch <= L'!')
          return 27;
            else if (ch == L'"')
                return 28;
        else if (ch >= L'#' && ch <= L'~')
           return 27;
    break; // 
            case 3:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 4:
        //TKAmpersandCharacter
    break; // 
            case 5:
        if (ch >= L' ' && ch <= L'&')
          return 30;
        else if (ch >= L'(' && ch <= L'[')
          return 30;
            else if (ch == L'\\')
                return 31;
        else if (ch >= L']' && ch <= L'~')
           return 30;
    break; // 
            case 6:
        //TKLeftParenthesisCharacter
    break; // 
            case 7:
        //TKRightParenthesisCharacter
    break; // 
            case 8:
        //TKAsteriskCharacter
    break; // 
            case 9:
        //TKPlusCharacter
    break; // 
            case 10:
        //TKCommaCharacter
    break; // 
            case 11:
        if (ch == L'.')
          return 32;
    break; // 
            case 12:
            if (ch == L'*')
                return 33;
        else if (ch == L'/')
          return 34;
    break; // 
            case 13:
        //TKSemicolonCharacter
    break; // 
            case 14:
        //TKEqualsCharacter
    break; // 
            case 15:
        //TKQuestionMarkCharacter
    break; // 
            case 16:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'm')
          return 3;
            else if (ch == L'n')
                return 35;
        else if (ch >= L'o' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 17:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'l')
          return 3;
            else if (ch == L'm')
                return 36;
        else if (ch >= L'n' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 18:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'm')
          return 3;
            else if (ch == L'n')
                return 37;
        else if (ch >= L'o' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 19:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
            else if (ch == L'a')
                return 38;
        else if (ch >= L'b' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 20:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'n')
          return 3;
            else if (ch == L'o')
                return 39;
        else if (ch >= L'p' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 21:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'x')
          return 3;
            else if (ch == L'y')
                return 40;
            else if (ch == L'z')
                return 3;
        //TKIdentifier
    break; // 
            case 22:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'n')
          return 3;
            else if (ch == L'o')
                return 41;
        else if (ch >= L'p' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 23:
        //TKLeftCurlyBracketCharacter
    break; // 
            case 24:
        //TKVerticalLineCharacter
    break; // 
            case 25:
        //TKRightCurlyBracketCharacter
    break; // 
            case 26:
  return -1;
    break; // 
            case 27:
  return 2; //any
    break; // 
            case 28:
        //TKStringLiteral
    break; // 
            case 29:
            if (ch == L'$')
                return 42;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 42;
            else if (ch == L'_')
                return 42;
        else if (ch >= L'a' && ch <= L'z')
           return 42;
    break; // 
            case 30:
        if (ch == L'\'')
          return 43;
    break; // 
            case 31:
            if (ch == L'"')
                return 30;
            else if (ch == L'\'')
                return 30;
            else if (ch == L'0')
                return 30;
            else if (ch == L'\\')
                return 30;
        else if (ch >= L'a' && ch <= L'b')
          return 30;
            else if (ch == L'f')
                return 30;
            else if (ch == L'n')
                return 30;
            else if (ch == L'r')
                return 30;
            else if (ch == L't')
                return 30;
            else if (ch == L'u')
                return 44;
        else if (ch == L'v')
          return 30;
    break; // 
            case 32:
        //TKRangeSeparator
    break; // 
            case 33:
        if (ch >= L'\t' && ch <= L'\n')
          return 33;
            else if (ch == L'\r')
                return 33;
        else if (ch >= L' ' && ch <= L')')
          return 33;
            else if (ch == L'*')
                return 45;
        else if (ch >= L'+' && ch <= L'~')
           return 33;
    break; // 
            case 34:
            if (ch == L'\n')
                return 46;
            else if (ch == L'\r')
                return 47;
        else if (ch >= L' ' && ch <= L'~')
           return 34;
    break; // 
            case 35:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'x')
          return 3;
            else if (ch == L'y')
                return 48;
            else if (ch == L'z')
                return 3;
        //TKIdentifier
    break; // 
            case 36:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'o')
          return 3;
            else if (ch == L'p')
                return 49;
        else if (ch >= L'q' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 37:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L's')
          return 3;
            else if (ch == L't')
                return 50;
        else if (ch >= L'u' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 38:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'm')
          return 3;
            else if (ch == L'n')
                return 51;
        else if (ch >= L'o' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 39:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'c')
          return 3;
            else if (ch == L'd')
                return 52;
        else if (ch >= L'e' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 40:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'm')
          return 3;
            else if (ch == L'n')
                return 53;
        else if (ch >= L'o' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 41:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'j')
          return 3;
            else if (ch == L'k')
                return 54;
        else if (ch >= L'l' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 42:
            if (ch == L'$')
                return 42;
        else if (ch >= L'A' && ch <= L'Z')
          return 42;
            else if (ch == L'_')
                return 42;
        else if (ch >= L'a' && ch <= L'z')
          return 42;
        //TKIdentifier
    break; // 
            case 43:
        //TKLiteralChar
    break; // 
            case 44:
        if (ch >= L'0' && ch <= L'9')
          return 55;
        else if (ch >= L'A' && ch <= L'F')
          return 55;
        else if (ch >= L'a' && ch <= L'f')
           return 55;
    break; // 
            case 45:
        if (ch >= L'\t' && ch <= L'\n')
          return 33;
            else if (ch == L'\r')
                return 33;
        else if (ch >= L' ' && ch <= L'.')
          return 33;
            else if (ch == L'/')
                return 46;
        else if (ch >= L'0' && ch <= L'~')
           return 33;
    break; // 
            case 46:
        //TKBlanks
    break; // 
            case 47:
        if (ch == L'\n')
          return 46;
    break; // 
            case 48:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'z')
          return 3;
        //TKKeywordAny
        //TKKeywordAny
    break; // 
            case 49:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L's')
          return 3;
            else if (ch == L't')
                return 56;
        else if (ch >= L'u' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 50:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'd')
          return 3;
            else if (ch == L'e')
                return 57;
        else if (ch >= L'f' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 51:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'f')
          return 3;
            else if (ch == L'g')
                return 58;
        else if (ch >= L'h' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 52:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L't')
          return 3;
            else if (ch == L'u')
                return 59;
        else if (ch >= L'v' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 53:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L's')
          return 3;
            else if (ch == L't')
                return 60;
        else if (ch >= L'u' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 54:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'd')
          return 3;
            else if (ch == L'e')
                return 61;
        else if (ch >= L'f' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 55:
        if (ch >= L'0' && ch <= L'9')
          return 62;
        else if (ch >= L'A' && ch <= L'F')
          return 62;
        else if (ch >= L'a' && ch <= L'f')
           return 62;
    break; // 
            case 56:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'x')
          return 3;
            else if (ch == L'y')
                return 63;
            else if (ch == L'z')
                return 3;
        //TKIdentifier
    break; // 
            case 57:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'q')
          return 3;
            else if (ch == L'r')
                return 64;
        else if (ch >= L's' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 58:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L't')
          return 3;
            else if (ch == L'u')
                return 65;
        else if (ch >= L'v' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 59:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'k')
          return 3;
            else if (ch == L'l')
                return 66;
        else if (ch >= L'm' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 60:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
            else if (ch == L'a')
                return 67;
        else if (ch >= L'b' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 61:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'm')
          return 3;
            else if (ch == L'n')
                return 68;
        else if (ch >= L'o' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 62:
        if (ch >= L'0' && ch <= L'9')
          return 69;
        else if (ch >= L'A' && ch <= L'F')
          return 69;
        else if (ch >= L'a' && ch <= L'f')
           return 69;
    break; // 
            case 63:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'z')
          return 3;
        //TKKeywordEmpty
        //TKKeywordEmpty
    break; // 
            case 64:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'k')
          return 3;
            else if (ch == L'l')
                return 70;
        else if (ch >= L'm' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 65:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
            else if (ch == L'a')
                return 71;
        else if (ch >= L'b' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 66:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'd')
          return 3;
            else if (ch == L'e')
                return 72;
        else if (ch >= L'f' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 67:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'w')
          return 3;
            else if (ch == L'x')
                return 73;
        else if (ch >= L'y' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 68:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'z')
          return 3;
        //TKKeywordToken
        //TKKeywordToken
    break; // 
            case 69:
        if (ch >= L'0' && ch <= L'9')
          return 30;
        else if (ch >= L'A' && ch <= L'F')
          return 30;
        else if (ch >= L'a' && ch <= L'f')
           return 30;
    break; // 
            case 70:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'd')
          return 3;
            else if (ch == L'e')
                return 74;
        else if (ch >= L'f' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 71:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'f')
          return 3;
            else if (ch == L'g')
                return 75;
        else if (ch >= L'h' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 72:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'z')
          return 3;
        //TKKeywordModule
        //TKKeywordModule
    break; // 
            case 73:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'z')
          return 3;
        //TKKeywordSyntax
        //TKKeywordSyntax
    break; // 
            case 74:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
            else if (ch == L'a')
                return 76;
        else if (ch >= L'b' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 75:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'd')
          return 3;
            else if (ch == L'e')
                return 77;
        else if (ch >= L'f' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 76:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'u')
          return 3;
            else if (ch == L'v')
                return 78;
        else if (ch >= L'w' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 77:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'z')
          return 3;
        //TKKeywordLanguage
        //TKKeywordLanguage
    break; // 
            case 78:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'd')
          return 3;
            else if (ch == L'e')
                return 79;
        else if (ch >= L'f' && ch <= L'z')
          return 3;
        //TKIdentifier
    break; // 
            case 79:
            if (ch == L'$')
                return 3;
        else if (ch >= L'0' && ch <= L'9')
          return 29;
        else if (ch >= L'A' && ch <= L'Z')
          return 3;
            else if (ch == L'_')
                return 3;
        else if (ch >= L'a' && ch <= L'z')
          return 3;
        //TKKeywordInterleave
        //TKKeywordInterleave
    break; // 
        } //switch
        return -1;
    }

    static bool IsInterleave(Tokens tk)
    {
        return tk == TKBlanks;
    }

    static bool GetTokenFromState(int state, Tokens& tk)
    {
        switch(state)
        {
            case 1: tk = TKBlanks; break;
            case 3: tk = TKIdentifier; break;
            case 4: tk = TKAmpersandCharacter; break;
            case 6: tk = TKLeftParenthesisCharacter; break;
            case 7: tk = TKRightParenthesisCharacter; break;
            case 8: tk = TKAsteriskCharacter; break;
            case 9: tk = TKPlusCharacter; break;
            case 10: tk = TKCommaCharacter; break;
            case 13: tk = TKSemicolonCharacter; break;
            case 14: tk = TKEqualsCharacter; break;
            case 15: tk = TKQuestionMarkCharacter; break;
            case 16: tk = TKIdentifier; break;
            case 17: tk = TKIdentifier; break;
            case 18: tk = TKIdentifier; break;
            case 19: tk = TKIdentifier; break;
            case 20: tk = TKIdentifier; break;
            case 21: tk = TKIdentifier; break;
            case 22: tk = TKIdentifier; break;
            case 23: tk = TKLeftCurlyBracketCharacter; break;
            case 24: tk = TKVerticalLineCharacter; break;
            case 25: tk = TKRightCurlyBracketCharacter; break;
            case 28: tk = TKStringLiteral; break;
            case 32: tk = TKRangeSeparator; break;
            case 35: tk = TKIdentifier; break;
            case 36: tk = TKIdentifier; break;
            case 37: tk = TKIdentifier; break;
            case 38: tk = TKIdentifier; break;
            case 39: tk = TKIdentifier; break;
            case 40: tk = TKIdentifier; break;
            case 41: tk = TKIdentifier; break;
            case 42: tk = TKIdentifier; break;
            case 43: tk = TKLiteralChar; break;
            case 46: tk = TKBlanks; break;
            case 48: tk = TKKeywordAny; break;
            case 49: tk = TKIdentifier; break;
            case 50: tk = TKIdentifier; break;
            case 51: tk = TKIdentifier; break;
            case 52: tk = TKIdentifier; break;
            case 53: tk = TKIdentifier; break;
            case 54: tk = TKIdentifier; break;
            case 56: tk = TKIdentifier; break;
            case 57: tk = TKIdentifier; break;
            case 58: tk = TKIdentifier; break;
            case 59: tk = TKIdentifier; break;
            case 60: tk = TKIdentifier; break;
            case 61: tk = TKIdentifier; break;
            case 63: tk = TKKeywordEmpty; break;
            case 64: tk = TKIdentifier; break;
            case 65: tk = TKIdentifier; break;
            case 66: tk = TKIdentifier; break;
            case 67: tk = TKIdentifier; break;
            case 68: tk = TKKeywordToken; break;
            case 70: tk = TKIdentifier; break;
            case 71: tk = TKIdentifier; break;
            case 72: tk = TKKeywordModule; break;
            case 73: tk = TKKeywordSyntax; break;
            case 74: tk = TKIdentifier; break;
            case 75: tk = TKIdentifier; break;
            case 76: tk = TKIdentifier; break;
            case 77: tk = TKKeywordLanguage; break;
            case 78: tk = TKIdentifier; break;
            case 79: tk = TKKeywordInterleave; break;
            default:
                return false;
        }
        return true;
    }
};
} //namespace
#endif //header
